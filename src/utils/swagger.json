{
  "swagger": "2.0",
  "info": {
    "description": "DEC-2022 NODEJS THE BEST GROUP",
    "version": "1.0.0",
    "title": "DEC-2022 API",
    "contact": {
      "email": "apiteam@okten.io"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "description": "get all users",
        "summary": "get all users summary",
        "responses": {
          "200": {
            "description": "RETURNED ARRAY OF USERS"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "description": "Create a new user",
        "summary": "Create a new user summary",
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "age",
            "type": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true
          }
        ] ,
        "responses": {
          "201": {
            "description": "Register a new user in database"
          }
        }
      }
    },
    "/auth/register/:token": {
      "post": {
        "tags": ["auth"],
        "description": "Verified a new user",
        "summary": "Verification of user email",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          }
        ] ,
        "responses": {
          "201": {
            "description": "Change status of user from inactive to active"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "description": "Login a current user",
        "summary": "Login a current user in platform",
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true
          }
        ] ,
        "responses": {
          "201": {
            "description": "Returned array of users"
          }
        }
      }
    },
    "/auth/changePassword": {
      "post": {
        "tags": ["auth"],
        "description": "Reselection of user password",
        "summary": "Change of user password",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          },
          {
            "in": "formData",
            "name": "newPassword",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "oldPassword",
            "type": "string",
            "required": true
          }

        ] ,
        "responses": {
          "201": {
            "description": "Change status of user from inactive to active"
          }
        }
      }
    },

    "/auth/refresh": {
      "post": {
        "tags": ["auth"],
        "description": "Refresh token of current user in database",
        "summary": "Refresh token of user",
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          }
        ] ,
        "responses": {
          "201": {
            "description": "Refresh an old credentials of user data"
          }
        }
      }
    },
    "/auth/forgot": {
      "post": {
        "tags": ["auth"],
        "description": "forget password",
        "summary": "Users ask for help when they dont know password ",
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          }
        ] ,
        "responses": {
          "201": {
            "description": "Returned AN email in that address"
          }
        }
      }
    },
    "/auth/forgot/:token": {
      "put": {
        "tags": ["auth"],
        "description": "Setting forgot password of user",
        "summary": "Setting forgot password in platform",
        "parameters": [
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true
          }
        ] ,
        "responses": {
          "201": {
            "description": "Renew a user especially password"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "description": "get user by user id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usr to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RETURNED USER",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "description": "update user by user id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usr to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "gender",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "age",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "RETURNED USER",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },

      "delete": {
        "tags": ["users"],
        "description": "delete user by user id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of usr to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RETURNED USER",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }

    }
  },
  "definitions": {
    "User": {
      "properties": {
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "default": 5
        },
        "gender": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    }
  }
}